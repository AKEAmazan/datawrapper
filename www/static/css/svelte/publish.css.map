{
  "version": 3,
  "file": "publish.css",
  "sources": [
    "../../../../src/publish/App.html",
    "../../../../src/editor/Help.html"
  ],
  "sourcesContent": [
    "{#if published}\n<p>{@html __('publish / republish-intro') }</p>\n{:else}\n<p style=\"margin-bottom: 20px\">{@html __('publish / publish-intro') }</p>\n{/if}\n\n<button disabled=\"{ publishing }\" on:click=\"publish()\" class=\"btn-publish btn btn-primary btn-large {published?'':'btn-first-publish'}\">\n    {#if published}\n    <span class=\"re-publish\"><i class=\"fa fa-fw fa-refresh {publishing ? 'fa-spin' : ''}\"></i> <span class=\"title\">{ __('publish / republish-btn') }</span></span>\n    {:else}\n    <span class=\"publish\"><i class=\"fa fa-fw {publishing ? 'fa-refresh fa-spin' : 'fa-cloud-upload'}\"></i> <span class=\"title\">{ __('publish / publish-btn') }</span></span>\n    {/if}\n</button>\n\n\n{#if !published}\n<div class=\"publish-intro\">\n    <div class=\"arrow\">\n        <i class=\"fa fa-chevron-left\"></i>\n    </div>\n    <div class=\"text\">\n        {@html __('publish / publish-btn-intro') }\n    </div>\n</div>\n{/if}\n\n\n{#if needs_republish && !publishing}\n<div class=\"btn-aside alert\">\n   {@html __('publish / republish-alert') }\n</div>\n{/if}\n{#if published && !needs_republish && progress == 1 && !publishing}\n<div class=\"alert alert-success\">\n   {@html __('publish / publish-success') }\n</div>\n{/if}\n\n{#if publish_error}\n<div class=\"alert alert-error\">\n   {@html publish_error }\n</div>\n{/if}\n\n{#if publishing}\n<div class=\"alert {progress < 1 ? 'alert-info' : 'alert-success'} publishing\">\n    { __(\"publish / progress / please-wait\") }\n    <div class=\"progress progress-striped active\">\n        <div class=\"bar {progress < 1 ? '' : 'bar-success'}\" ref:bar />\n    </div>\n</div>\n{/if}\n\n<div style=\"margin-top:20px\" class=\"{published?'':'inactive'}\">\n    <h2>{@html __('publish / share-embed') }</h2>\n    <div class=\"block\">\n        <i class=\"icon fa fa-link fa-fw\"></i>\n        <div class=\"ctrls\">\n            <div class=\"h\">\n                <b>{@html __('publish / share-url') }</b>\n                <div class=\"embed-options\">\n                    <label class=\"radio\"><input bind:group='shareurl_type' value='default' type=\"radio\" name=\"url-type\"> {@html __('publish / share-url / fullscreen') }</label>\n                    {#each plugin_shareurls as tpl}\n                    <label class=\"radio\"><input bind:group='shareurl_type' value='{tpl.id}' type=\"radio\" name=\"url-type\"> {@html tpl.name}</label>\n                    {/each}\n                </div>\n            </div>\n            <div class=\"inpt\">\n                <a target=\"_blank\" class=\"share-url\" href=\"{shareUrl}\">{shareUrl}</a>\n            </div>\n        </div>\n        <Help>\n            <div>{@html __('publish / help / share-url') }</div>\n        </Help>\n    </div>\n\n    <div class=\"block\">\n        <i class=\"icon fa fa-code fa-fw\"></i>\n        <div class=\"ctrls\">\n            <div class=\"h\">\n                <b>{@html __('publish / embed') }</b>\n                <div class=\"embed-options\">\n                    {#each embed_templates as tpl}\n                    <label class=\"radio\"><input type=\"radio\" bind:group='embed_type' value='{tpl.id}'> {@html tpl.title }</label>\n                    {/each}\n                </div>\n            </div>\n            <div class=\"inpt\">\n                <input ref:embedInput type=\"text\" class=\"input embed-code\" readonly value=\"{embedCode}\" /> <button class=\"btn btn-copy\" on:click=\"copy(embedCode)\" title=\"copy\"><i class=\"fa fa-copy\"></i> { __('publish / copy') }</button>\n                <div class=\"copy-success {copy_success ? 'show':''}\">\n                    { __('publish / copy-success') }\n                </div>\n            </div>\n        </div>\n        <Help>\n            <div>\n                {@html __('publish / embed / help') }\n                {#each embed_templates.slice(2) as tpl}\n                <div><b>{tpl.title}:</b> {@html tpl.text}</div>\n                {/each}\n            </div>\n        </Help>\n\n    </div>\n</div>\n\n<style>\n    .btn-publish {\n        border-color: #1d81a2!important;\n        box-shadow: 0px 3px 6px rgba(0,0,0,0.25);\n        line-height: 20px;\n        padding: 15px;\n    }\n\n    .btn-first-publish {\n        text-align: center;\n        width: 150px;\n        vertical-align: middle;\n        padding: 15px 0 15px;\n    }\n\n    .btn-publish i.fa {\n        font-size: 20px;\n    }\n    .btn-first-publish i.fa {\n        font-size: 32px;\n        display: block;\n        margin: 5px auto;\n    }\n\n    .btn-first-publish .title {\n        display: block;\n        text-align: center;\n        font-size: 18px;\n        line-height: 22px;\n        padding: 5px 20px 0px 20px;\n    }\n    .publish-intro {\n        display: inline-block;\n        font-size: 18px!important;\n        line-height: 22px;\n    }\n\n    .publish-intro .arrow {\n        vertical-align: middle;\n        display: inline-block;\n        padding: 15px;\n    }\n    .publish-intro .text {\n        vertical-align: middle;\n        display: inline-block;\n        width: 200px;\n    }\n    @media (max-width: 1200px) {\n        .publish-intro {\n            font-size: 15px;\n        }\n        .publish-intro .text {\n            vertical-align: middle;\n            display: inline-block;\n            width: 140px;\n            line-height: 18px;\n            font-size: 15px;\n        }\n    }\n\n\n    div.progress {\n        margin-top: 8px;\n        margin-bottom: 4px;\n    }\n    input[type=radio] {\n        vertical-align: baseline!important;\n    }\n    a.share-url {\n        font-size: 18px;\n    }\n    .btn-aside.alert {\n        margin-left: 0;\n        margin-top: 7px;\n        max-width: 100%;\n    }\n\n    .copy-success {\n        font-size: 11px;\n        color: #9c9;\n        font-style: italic;\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 5s ease-in;\n        margin-top: -10px;\n        position: absolute;\n    }\n    .copy-success.show {\n        opacity: 1;\n        transition: none;\n    }\n    .embed-options {\n        display: inline-block;\n    }\n</style>\n\n<script>\n    import Help from '../editor/Help.html';\n\n    import {__} from '../shared/l10n';\n    import {getJSON, postJSON} from '../shared/utils';\n    import computeEmbedHeights from './compute-embed-heights';\n\n\n    let fakeProgress = 0;\n    let initial_auto_publish = true;\n\n    export default {\n        components: { Help},\n        helpers: { __ },\n        computed: {\n\n            shareUrl ({ shareurl_type, chart, plugin_shareurls, published }) {\n                if (!published) return 'https://www.datawrapper.de/...';\n                if (shareurl_type == 'default') return chart.publicUrl;\n                let url = '';\n                plugin_shareurls.forEach(t => {\n                    if (t.id == shareurl_type) url = t.url.replace(/%chart_id%/g, chart.id);\n                });\n                return url;\n            },\n\n            embedCode ({ embed_type, chart }) {\n                if (!chart.metadata) return '';\n                if (chart.metadata.publish && !chart.metadata.publish['embed-codes'])\n                    return `<iframe src=\"${chart.publicUrl}\" width=\"100%\" height=\"${chart.metadata.publish['embed-height']}\" scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\"></iframe>`;\n                return chart.metadata.publish['embed-codes']['embed-method-'+embed_type];\n            }\n        },\n        methods: {\n\n            publish () {\n                const me = this;\n                // wait another 100ms until the page is ready\n                if (!window.chart.save) {\n                    setTimeout(() => { me.publish(); }, 100);\n                    return;\n                }\n                const {chart} = me.get();\n                me.set({\n                    publishing: true,\n                    progress: 0,\n                    publish_error: false\n                });\n                // generate embed codes\n                chart.metadata.publish['embed-heights'] =\n                    computeEmbedHeights(chart, me.get('embed_templates'));\n                // update charts\n                me.set({chart});\n                // save embed heights and wait until it's done before\n                // we start to publish the chart\n                window.chart.attributes(chart).save().then((d) => {\n                    // publish chart\n                    postJSON(`/api/charts/${chart.id}/publish`, null, (res) => {\n                        if (res.status == 'ok') {\n                            me.publishFinished(res.data);\n                        } else {\n                            me.set({publish_error: res.message });\n                        }\n                    });\n                    fakeProgress = 0;\n                    me.updateStatus();\n                });\n            },\n\n            updateProgressBar (p) {\n                if (this.refs.bar) {\n                    this.refs.bar.style.width = (p*100).toFixed()+'%';\n                }\n            },\n\n            updateStatus () {\n                const me = this;\n                const {chart} = me.get();\n                fakeProgress += 0.05;\n                getJSON(`/api/charts/${chart.id}/publish/status`, (res) => {\n                    if (res) {\n                        res = (+res / 100) + fakeProgress;\n                        me.set({progress: Math.min(1,res)});\n                    }\n                    if (me.get().publishing) {\n                        setTimeout(() => { me.updateStatus(); },400);\n                    }\n                });\n            },\n\n            publishFinished (chartInfo) {\n                this.set({\n                    progress: 1,\n                    published: true,\n                    needs_republish: false\n                });\n                setTimeout(() => this.set({publishing: false}), 500);\n                this.set({ chart: chartInfo });\n                window.chart.attributes(chartInfo);\n            },\n\n            copy (embedCode) {\n                const me = this;\n                console.log('COPY', embedCode);\n                me.refs.embedInput.select();\n                try {\n                    var successful = document.execCommand('copy');\n                    var msg = successful ? 'successful' : 'unsuccessful';\n                    if (successful) {\n                        me.set({copy_success: true});\n                        setTimeout(() => me.set({copy_success:false}), 300);\n                    }\n                } catch (err) {\n                    // console.log('Oops, unable to copy');\n                }\n            }\n        },\n        onstate({changed, current}) {\n            const userDataReady = window.dw && window.dw.backend && window.dw.backend.setUserData;\n            if (changed.publishing) {\n                if (current.publishing) this.updateProgressBar(current.progress);\n            }\n            if (changed.progress) {\n                this.updateProgressBar(current.progress);\n            }\n            if (changed.embed_type && userDataReady) {\n                const data = window.dw.backend.__userData;\n                if (!current.embed_type || !data) return;\n                data.embed_type = current.embed_type;\n                window.dw.backend.setUserData(data);\n            }\n            if (changed.shareurl_type && userDataReady) {\n                const data = window.dw.backend.__userData;\n                if (!current.shareurl_type || !data) return;\n                data.shareurl_type = current.shareurl_type;\n                window.dw.backend.setUserData(data);\n            }\n            if (changed.published) {\n                window.document\n                    .querySelector('.dw-create-publish .publish-step')\n                    .classList[current.published ? 'add' : 'remove']('is-published');\n            }\n            if (changed.auto_publish) {\n                if (current.auto_publish && initial_auto_publish) {\n                    this.publish();\n                    initial_auto_publish = false;\n                    window.history.replaceState('','', location.pathname);\n                }\n            }\n        },\n        data() {\n            return {\n                chart: {\n                    id: ''\n                },\n                embed_templates: [],\n                plugin_shareurls: [],\n                published: false,\n                publishing: false,\n                needs_republish: false,\n                publish_error: false,\n                auto_publish: false,\n                progress: 0,\n                shareurl_type: 'default',\n                embed_type: 'responsive',\n                copy_success: false\n            }\n        }\n    };\n</script>\n\n",
    "<div class=\"help\">\n    <span>?</span>\n    <div class=\"content\">\n        <slot />\n    </div>\n</div>\n\n<style type=\"text/css\">\n    .help {\n        float: right;\n        position: relative;\n        z-index: 8000;\n    }\n\n    .help .content::after {\n        content: '';\n        position: absolute;\n        top: 8px;\n        right: 8px;\n    }\n\n    .help:hover .content {\n        display: block;\n    }\n\n    .help .content {\n        display: none;\n        position: absolute;\n        top: -8px;\n        right: -8px;\n        padding: 8px 40px 8px 10px;\n        background: #9cbfd1;\n        color: #f9f9f9;\n        width: 260px;\n        border-radius: 4px;\n        box-shadow: 3px 2px 2px rgba(0, 0, 0, 0.1);\n        z-index: 8000;\n    }\n\n    .help .content img {\n        max-width: none;\n    }\n\n    .help > span {\n        font-family: Roboto Mono;\n        z-index: 100001;\n        position: relative;\n        display: block;\n        width: 22px;\n        height: 22px;\n        line-height: 22px;\n        border-radius: 50%;\n        background: transparent;\n        text-align: center;\n        color: #bbb;\n        font-size: 17px;\n        top: -2px;\n    }\n\n    .help:hover > span {\n        background: #9cbfd1;\n        color: #f9f9f9;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}