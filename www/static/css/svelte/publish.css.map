{
  "version": 3,
  "file": "publish.css",
  "sources": [
    "../../../../src/publish/App.html"
  ],
  "sourcesContent": [
    "{{#if published}}\n<p>{{{ \"Dieses Diagramm wurde bereits veröffentlicht. Wenn du weitere Änderungen vornimmst, musst du das Diagramm hier erneut veröffentlichen.\" }}}</p>\n{{else}}\n<p style=\"margin-bottom: 20px\">{{{ \"Um dein Diagramm zu teilen oder einzubetten musst du es veröffentlichen. Es wird nur für Personen sichtbar sein, die die URL des Diagramms kennen.\" }}}</p>\n{{/if}}\n\n<button disabled=\"{{ publishing }}\" on:click=\"publish()\" class=\"btn-publish btn btn-primary btn-large {{published?'':'btn-first-publish'}}\">\n    {{#if published}}\n    <span class=\"re-publish\"><i class=\"fa fa-fw fa-refresh {{publishing ? 'fa-spin' : ''}}\"></i> <span class=\"title\">{{ \"Erneut veröffentlichen\" }}</span></span>\n    {{else}}\n    <span class=\"publish\"><i class=\"fa fa-fw {{publishing ? 'fa-refresh fa-spin' : 'fa-cloud-upload'}}\"></i> <span class=\"title\">{{ \"Veröffentlichen\" }}</span></span>\n    {{/if}}\n</button>\n\n\n{{#if !published}}\n<div class=\"publish-intro\">\n    <div class=\"arrow\">\n        <i class=\"fa fa-chevron-left\"></i>\n    </div>\n    <div class=\"text\">\n        {{{ \"Klicke hier wenn du dein Diagramm auf deiner <b>Website<b> oder <b>CMS</b> einbetten willst.\" }}}\n    </div>\n</div>\n{{/if}}\n\n\n{{#if needs_republish && !publishing}}\n<div class=\"btn-aside alert\">\n   {{{ \"Dein Diagramm wurde geändert nachdem es veröffentlicht wurde. Du musst es <b>erneut veröffentlichen</b> damit die Änderungen wirksam werden.\" }}}\n</div>\n{{/if}}\n{{#if published && !needs_republish && progress == 1 && !publishing}}\n<div class=\"alert alert-success\">\n   {{{ \"Glückwunsch, das Diagramm kann jetzt geteilt und eingebettet werden.\" }}}\n</div>\n{{/if}}\n\n{{#if publish_error}}\n<div class=\"alert alert-error\">\n   {{{ publish_error }}}\n</div>\n{{/if}}\n\n{{#if publishing}}\n<div class=\"alert {{progress < 1 ? 'alert-info' : 'alert-success'}} publishing\">\n    {{ \"Dein Diagramm wird jetzt für die Veröffentlichung vorbereitet. In wenigen Sekunden erhältst du einen Link für die Einbettung. \" }}\n    <div class=\"progress progress-striped active\">\n        <div class=\"bar {{progress < 1 ? '' : 'bar-success'}}\" ref:bar />\n    </div>\n</div>\n{{/if}}\n\n<div style=\"margin-top:20px\" class=\"{{published?'':'inactive'}}\">\n    <h2>{{{ \"Teilen & Einbetten\" }}}</h2>\n    <div class=\"block\">\n        <i class=\"icon fa fa-link fa-fw\"></i>\n        <div class=\"ctrls\">\n            <div class=\"h\">\n                <b>{{{ \"Diagramm per URL teilen\" }}}</b>\n                <div class=\"embed-options\">\n                    <label class=\"radio\"><input bind:group='shareurl_type' value='default' type=\"radio\" name=\"url-type\"> {{{ \"Vollbild\" }}}</label>\n                    {{#each plugin_shareurls as tpl}}\n                    <label class=\"radio\"><input bind:group='shareurl_type' value='{{tpl.id}}' type=\"radio\" name=\"url-type\"> {{{tpl.name}}}</label>\n                    {{/each}}\n                </div>\n            </div>\n            <div class=\"inpt\">\n                <a target=\"_blank\" class=\"share-url\" href=\"{{shareUrl}}\">{{shareUrl}}</a>\n            </div>\n        </div>\n        <div class=\"help\">\n            <span>?</span>\n            <div class=\"content\">\n                {{{ \"Bei <b>normale Größe</b> wird das Diagramm genau so dargestellt, wie es erstellt wurde. Bei <b>Vollbild</b> füllt das Diagramm das komplette Browser-Fenser.\" }}}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"block\">\n        <i class=\"icon fa fa-code fa-fw\"></i>\n        <div class=\"ctrls\">\n            <div class=\"h\">\n                <b>{{{ \"Einbett-Code kopieren\" }}}</b>\n                <div class=\"embed-options\">\n                    {{#each embed_templates as tpl}}\n                    <label class=\"radio\"><input type=\"radio\" bind:group='embed_type' value='{{tpl.id}}'> {{{ tpl.title }}}</label>\n                    {{/each}}\n                </div>\n            </div>\n            <div class=\"inpt\">\n                <input ref:embedInput type=\"text\" class=\"input embed-code\" readonly value=\"{{embedCode}}\" /> <button class=\"btn btn-copy\" on:click=\"copy(embedCode)\" title=\"copy\"><i class=\"fa fa-copy\"></i> {{ \"kopieren\" }}</button>\n                <div class=\"copy-success {{copy_success ? 'show':''}}\">\n                    {{ \"Der Code wurde kopiert!\" }}\n                </div>\n            </div>\n        </div>\n        <div class=\"help\">\n            <span>?</span>\n            <div class=\"content\">\n                {{{ \"Kopiere diesen HTML Code in deine Webseite oder CMS, um dein Diagramm einzubetten. Der <b>responsive</b> Iframe passt sich automatisch der Höhe der Überschrift auf verschiedenen Geräten an.\" }}}\n                {{#each embed_templates.slice(2) as tpl}}\n                <div><b>{{tpl.title}}:</b> {{{tpl.text}}}</div>\n                {{/each}}\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .btn-publish {\n        border-color: #1d81a2!important;\n        box-shadow: 0px 3px 6px rgba(0,0,0,0.25);\n        line-height: 20px;\n        padding: 15px;\n    }\n\n    .btn-first-publish {\n        text-align: center;\n        width: 150px;\n        vertical-align: middle;\n        padding: 15px 0 15px;\n    }\n\n    .btn-publish i.fa {\n        font-size: 20px;\n    }\n    .btn-first-publish i.fa {\n        font-size: 32px;\n        display: block;\n        margin: 5px auto;\n    }\n\n    .btn-first-publish .title {\n        display: block;\n        text-align: center;\n        font-size: 18px;\n        line-height: 22px;\n        padding: 5px 20px 0px 20px;\n    }\n    .publish-intro {\n        display: inline-block;\n        font-size: 18px!important;\n        line-height: 22px;\n    }\n\n    .publish-intro .arrow {\n        vertical-align: middle;\n        display: inline-block;\n        padding: 15px;\n    }\n    .publish-intro .text {\n        vertical-align: middle;\n        display: inline-block;\n        width: 200px;\n    }\n    @media (max-width: 1200px) {\n        .publish-intro {\n            font-size: 15px;\n        }\n        .publish-intro .text {\n            vertical-align: middle;\n            display: inline-block;\n            width: 140px;\n            line-height: 18px;\n            font-size: 15px;\n        }\n    }\n\n\n    div.progress {\n        margin-top: 8px;\n        margin-bottom: 4px;\n    }\n    input[type=radio] {\n        vertical-align: baseline!important;\n    }\n    a.share-url {\n        font-size: 18px;\n    }\n    .btn-aside.alert {\n        margin-left: 0;\n        margin-top: 7px;\n        max-width: 100%;\n    }\n\n    .copy-success {\n        font-size: 11px;\n        color: #9c9;\n        font-style: italic;\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 5s ease-in;\n        margin-top: -10px;\n        position: absolute;\n    }\n    .copy-success.show {\n        opacity: 1;\n        transition: none;\n    }\n    .embed-options {\n        display: inline-block;\n    }\n</style>\n\n<script>\n    // import Index from './Index.html';\n    // import Leaderboard from './Leaderboard.html';\n    // import Header from './Header.html';\n\n    import {getJSON, postJSON} from '../shared/utils';\n    import computeEmbedHeights from './compute-embed-heights';\n\n    var fakeProgress = 0;\n\n    export default {\n        components: {\n            // Index, Header, Leaderboard\n        },\n        computed: {\n\n            shareUrl (shareurl_type, chart, plugin_shareurls, published) {\n                if (!published) return 'https://www.datawrapper.de/...';\n                if (shareurl_type == 'default') return chart.publicUrl;\n                let url = '';\n                plugin_shareurls.forEach(t => {\n                    if (t.id == shareurl_type) url = t.url.replace(/%chart_id%/g, chart.id);\n                });\n                return url;\n            },\n\n            embedCode (embed_type, chart) {\n                if (!chart.metadata) return '';\n                if (chart.metadata.publish && !chart.metadata.publish['embed-codes'])\n                    return `<iframe src=\"${chart.publicUrl}\" width=\"100%\" height=\"${chart.metadata.publish['embed-height']}\" scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\"></iframe>`;\n                return chart.metadata.publish['embed-codes']['embed-method-'+embed_type];\n            }\n        },\n        methods: {\n\n            publish () {\n                const me = this;\n                // wait another 100ms until the page is ready\n                if (!window.chart.save) {\n                    setTimeout(() => { me.publish(); }, 100);\n                    return;\n                }\n                const chart = me.get('chart');\n                me.set({\n                    publishing: true,\n                    progress: 0,\n                    publish_error: false\n                });\n                // generate embed codes\n                chart.metadata.publish['embed-heights'] =\n                    computeEmbedHeights(chart, me.get('embed_templates'));\n                // update charts\n                me.set({chart});\n                // save embed heights and wait until it's done before\n                // we start to publish the chart\n                window.chart.attributes(chart).save().then((d) => {\n                    // publish chart\n                    postJSON(`/api/charts/${chart.id}/publish`, null, (res) => {\n                        if (res.status == 'ok') {\n                            me.publishFinished(res.data);\n                        } else {\n                            me.set({publish_error: res.message });\n                        }\n                    });\n                    fakeProgress = 0;\n                    me.updateStatus();\n                });\n            },\n\n            updateProgressBar (p) {\n                if (this.refs.bar) {\n                    this.refs.bar.style.width = (p*100).toFixed()+'%';\n                }\n            },\n\n            updateStatus () {\n                const me = this;\n                const chart = me.get('chart');\n                fakeProgress += 0.05;\n                getJSON(`/api/charts/${chart.id}/publish/status`, (res) => {\n                    if (res) {\n                        res = (+res / 100) + fakeProgress;\n                        me.set({progress: Math.min(1,res)});\n                    }\n                    if (me.get('publishing')) {\n                        setTimeout(() => { me.updateStatus(); },400);\n                    }\n                });\n            },\n\n            publishFinished (chartInfo) {\n                this.set({\n                    progress: 1,\n                    published: true,\n                    needs_republish: false\n                });\n                setTimeout(() => this.set({publishing: false}), 500);\n                this.set({ chart: chartInfo });\n                window.chart.attributes(chartInfo);\n            },\n\n            copy (embedCode) {\n                const me = this;\n                console.log('COPY', embedCode);\n                me.refs.embedInput.select();\n                try {\n                    var successful = document.execCommand('copy');\n                    var msg = successful ? 'successful' : 'unsuccessful';\n                    if (successful) {\n                        me.set({copy_success: true});\n                        setTimeout(() => me.set({copy_success:false}), 300);\n                    }\n                } catch (err) {\n                    // console.log('Oops, unable to copy');\n                }\n            }\n        },\n\n        oncreate() {\n            const me = this;\n            me.observe('publishing', (p) => {\n                if (p) me.updateProgressBar(me.get('progress'));\n            });\n            me.observe('progress', (p) => {\n                me.updateProgressBar(p);\n            });\n            // persist embed_type and shareurl\n            me.observe('embed_type', (v) => {\n                const data = window.dw.backend.__userData;\n                if (!v || !data) return;\n                data.embed_type = v;\n                window.dw.backend.setUserData(data);\n            });\n\n            me.observe('shareurl_type', (v) => {\n                const data = window.dw.backend.__userData;\n                if (!v || !data) return;\n                data.shareurl_type = v;\n                window.dw.backend.setUserData(data);\n            });\n\n            me.observe('published', (p) => {\n                window.document\n                    .querySelector('.dw-create-publish .publish-step')\n                    .classList[p ? 'add' : 'remove']('is-published');\n            });\n\n            var initial_auto_publish = true;\n            me.observe('auto_publish', (p) => {\n                if (p && initial_auto_publish) {\n                    me.publish();\n                    initial_auto_publish = false;\n                    window.history.replaceState('','', location.pathname);\n                }\n            });\n        }\n    };\n</script>\n\n"
  ],
  "names": [],
  "mappings": "AA8GI,YAAY,mBAAC,CAAC,AACV,YAAY,CAAE,OAAO,UAAU,CAC/B,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACxC,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,kBAAkB,mBAAC,CAAC,AAChB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,KAAK,CACZ,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,AACxB,CAAC,AAED,+BAAY,CAAC,CAAC,GAAG,mBAAC,CAAC,AACf,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,qCAAkB,CAAC,CAAC,GAAG,mBAAC,CAAC,AACrB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,qCAAkB,CAAC,MAAM,mBAAC,CAAC,AACvB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,AAC9B,CAAC,AACD,cAAc,mBAAC,CAAC,AACZ,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,UAAU,CACzB,WAAW,CAAE,IAAI,AACrB,CAAC,AAED,iCAAc,CAAC,MAAM,mBAAC,CAAC,AACnB,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,iCAAc,CAAC,KAAK,mBAAC,CAAC,AAClB,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,KAAK,AAChB,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AACxB,cAAc,mBAAC,CAAC,AACZ,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,iCAAc,CAAC,KAAK,mBAAC,CAAC,AAClB,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AACnB,CAAC,AACL,CAAC,AAGD,GAAG,SAAS,mBAAC,CAAC,AACV,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,AACtB,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAC,CAAC,AACf,cAAc,CAAE,QAAQ,UAAU,AACtC,CAAC,AACD,CAAC,UAAU,mBAAC,CAAC,AACT,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,UAAU,MAAM,mBAAC,CAAC,AACd,WAAW,CAAE,CAAC,CACd,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,aAAa,mBAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IAAI,CACpB,UAAU,CAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAC9B,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,QAAQ,AACtB,CAAC,AACD,aAAa,KAAK,mBAAC,CAAC,AAChB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,cAAc,mBAAC,CAAC,AACZ,OAAO,CAAE,YAAY,AACzB,CAAC"
}